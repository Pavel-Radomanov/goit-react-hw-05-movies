{"version":3,"file":"static/js/304.48090190.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #323a37;\n  \n  margin: 30px, 0;\n  text-decoration: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #323a37;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrending } from '../../services/Api';\nimport {\n  HomeContainer,\n  HomeTitle,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    fetchTrending().then(setMovies);\n  }, []);\n  console.log();\n  return (\n    <HomeContainer>\n      <HomeTitle>Tranding this week</HomeTitle>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, poster }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster} alt={title} />\n                <MovieTitle>\n                  <h3>{title}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n  //   include_adult: false,\n};\n\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n// export const fetchTrending = async () => {\n//   const { data } = await axios.get(`/trending/all/day?`);\n//   console.log(data);\n//   const response = data.results;\n//   return response;\n// };\n// fetchTrending();\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/week?`)\n    .then(({ data: { results } }) =>\n      results.map(\n        ({ id, title, poster_path: poster }) => ({\n          id,\n          title,\n          poster: IMG_URL + poster,\n        }),\n        console.log(results)\n      )\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      }),\n      console.log(movieId)\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : defaultPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n"],"names":["HomeContainer","styled","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","useState","movies","setMovies","location","useLocation","useEffect","fetchTrending","then","console","log","length","map","id","title","poster","to","state","from","src","alt","axios","api_key","IMG_URL","results","data","poster_path","catch","error","message","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}