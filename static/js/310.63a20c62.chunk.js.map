{"version":3,"file":"static/js/310.63a20c62.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    max-width: 600px;\n    display: flex;\n    jastyfy-contenr: center\n    max-width: 600px;;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n}`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    color: #323a37;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n  //   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #323a37;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #323a37;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from '../../services/Api';\nimport {\n  FormDiv,\n  Form,\n  Input,\n  Button,\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    console.log(response);\n    if (response.length === 0) {\n      alert('Sorry, we do not find any movie');\n    }\n    setSearchParams({ query });\n    console.log(query);\n\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(({ id, title, poster }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster} alt={title} />\n                <MovieTitle>\n                  <h3>{title}</h3>\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n  //   include_adult: false,\n};\n\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n// export const fetchTrending = async () => {\n//   const { data } = await axios.get(`/trending/all/day?`);\n//   console.log(data);\n//   const response = data.results;\n//   return response;\n// };\n// fetchTrending();\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/week?`)\n    .then(({ data: { results } }) =>\n      results.map(\n        ({ id, title, poster_path: poster }) => ({\n          id,\n          title,\n          poster: IMG_URL + poster,\n        }),\n        console.log(results)\n      )\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      }),\n      console.log(movieId)\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : defaultPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n"],"names":["FormDiv","styled","Form","Input","Button","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","fetchByQuery","then","handleSubmit","e","preventDefault","response","console","log","length","alert","onSubmit","type","value","onChange","target","map","id","title","poster","to","state","from","src","alt","axios","api_key","IMG_URL","fetchTrending","results","data","poster_path","catch","error","message","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}