{"version":3,"file":"static/js/779.1adf37b8.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n","import { fetchMovieReviews } from '../../services/Api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n  //   include_adult: false,\n};\n\n// https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n// export const fetchTrending = async () => {\n//   const { data } = await axios.get(`/trending/all/day?`);\n//   console.log(data);\n//   const response = data.results;\n//   return response;\n// };\n// fetchTrending();\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/week?`)\n    .then(({ data: { results } }) =>\n      results.map(\n        ({ id, title, poster_path: poster }) => ({\n          id,\n          title,\n          poster: IMG_URL + poster,\n        }),\n        console.log(results)\n      )\n    )\n\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMG_URL + poster,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      }),\n      console.log(movieId)\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMG_URL + photo : defaultPhoto,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n"],"names":["ReviewsContainer","styled","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","length","map","id","author","content","axios","api_key","IMG_URL","fetchTrending","results","data","title","poster","poster_path","console","log","catch","error","message","fetchByQuery","query","fetchMovieDetails","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path"],"sourceRoot":""}